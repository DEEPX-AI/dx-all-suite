# dx-all-suite/.github/workflows/gh-cloud-release-to-main.yml
name: Full Release to Main
run-name: Triggering full release from staging to main across all submodules

on:
  workflow_dispatch:

permissions: write-all

env:
  OWNER: DEEPX-AI

jobs:
  trigger-release:
    runs-on:
      - self-hosted
      - sdk
    timeout-minutes: 20
    steps:
      - name: Clean Workspace
        run: |
          sudo rm -rf ${{ github.workspace }}
          mkdir -p ${{ github.workspace }}

      - name: Checkout Main Branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GC_DCI_TOKEN }}
          fetch-depth: 0
          submodules: recursive

      - name: Fetch Staging Branch
        run: git fetch origin staging

      - name: Get Last Staging Commit Message for dx-all-suite
        id: get_dx_all_suite_staging_message
        run: |
          LAST_STAGING_COMMIT_MESSAGE=$(git log -1 --pretty=%B origin/staging)
          echo "LAST_STAGING_COMMIT_MESSAGE=$LAST_STAGING_COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Check dx-all-suite Diff (Staging vs Main)
        id: check_dx_all_suite_diff
        run: |
          if git diff --quiet main origin/staging; then
            echo "::notice::No differences in dx-all-suite main vs staging. Skipping direct merge."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "::notice::Differences found in dx-all-suite. Proceeding with direct merge."
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Merge dx-all-suite Staging to Main (Squash)
        if: steps.check_dx_all_suite_diff.outputs.has_changes == 'true'
        run: |
          echo "Pulling latest changes from origin/main before merge..."
          git pull origin main # 최신 main 브랜치 상태를 가져옴

          echo "Attempting to squash merge staging into main..."
          git merge --squash origin/staging -m "${{ env.LAST_STAGING_COMMIT_MESSAGE }}" || true
          git add dx-runtime dx-compiler dx-modelzoo

          # Merge 후 스테이징된 변경 사항이 있는지 확인
          if git diff --staged --quiet; then
            echo "::notice::No new changes were staged after squash merge. Skipping commit."
          else
            echo "::notice::Changes staged. Proceeding with commit and push."
            git commit -m "${{ env.LAST_STAGING_COMMIT_MESSAGE }}"
            git push origin main
          fi

      - name: Recreate Staging Branch for dx-all-suite from Main
        if: steps.check_dx_all_suite_diff.outputs.has_changes == 'true'
        run: |
          echo "Deleting remote origin/staging branch for dx-all-suite..."
          git push origin --delete staging || true

          echo "Checking out main branch and pulling latest for dx-all-suite..."
          git checkout main
          git pull origin main

          echo "Creating new staging branch from main for dx-all-suite..."
          git checkout -b staging

          echo "Pushing new staging branch to origin for dx-all-suite..."
          git push -u origin staging

      - name: Get Current dx-all-suite Main SHA
        id: get_dx_all_suite_sha
        run: echo "dx_all_suite_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Dispatch to dx-runtime
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GC_DCI_TOKEN }}
          repository: ${{ env.OWNER }}/dx-runtime
          event-type: release-to-main
          client-payload: |
            {
              "repo_name": "dx-runtime",
              "parent_owner": "DEEPX-AI",
              "parent_repo": "dx-all-suite",
              "parent_sha": "${{ steps.get_dx_all_suite_sha.outputs.dx_all_suite_sha }}",
              "parent_ref": "main"
            }

      - name: Dispatch to dx-compiler
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GC_DCI_TOKEN }}
          repository: ${{ env.OWNER }}/dx-compiler
          event-type: merge-staging-to-main
          client-payload: |
            {
              "repo_name": "dx-compiler",
              "parent_owner": "DEEPX-AI",
              "parent_repo": "dx-all-suite",
              "parent_sha": "${{ steps.get_dx_all_suite_sha.outputs.dx_all_suite_sha }}",
              "parent_ref": "main"
            }

      - name: Dispatch to dx-modelzoo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GC_DCI_TOKEN }}
          repository: ${{ env.OWNER }}/dx-modelzoo
          event-type: merge-staging-to-main
          client-payload: |
            {
              "repo_name": "dx-modelzoo",
              "parent_owner": "DEEPX-AI",
              "parent_repo": "dx-all-suite",
              "parent_sha": "${{ steps.get_dx_all_suite_sha.outputs.dx_all_suite_sha }}",
              "parent_ref": "main"
            }
