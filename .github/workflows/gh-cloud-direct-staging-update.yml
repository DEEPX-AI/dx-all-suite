# dx-all-suite/.github/workflows/gh-cloud-direct-staging-update.yml
name: Direct Staging Update and Tag
run-name: Direct staging push to dx-all-suite by ${{ github.sha }}

on:
  push:
    branches:
      - staging # dx-all-suite의 staging 브랜치에 직접 푸시될 때 트리거

permissions: write-all

jobs:
  process_direct_push:
    runs-on:
      - self-hosted
      - sdk
    steps:
      - name: Clean Workspace
        run: |
          sudo rm -rf ${{ github.workspace }}
          mkdir -p ${{ github.workspace }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.GC_DCI_TOKEN }}
          ref: staging # staging 브랜치 체크아웃

      - name: Extract and Validate Tag
        id: extract_tag
        run: |
          MSG="${{ github.event.head_commit.message }}"
          # 커밋 메시지가 'vX.Y.Z+' 패턴으로 시작하는지 확인
          if echo "$MSG" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+\+'; then
            TAG_PREFIX=$(echo "$MSG" | cut -d'+' -f1)
            echo "::notice::Valid tag format found: $TAG_PREFIX"
            echo "tag_name=$TAG_PREFIX" >> $GITHUB_OUTPUT
            echo "is_valid_tag=true" >> $GITHUB_OUTPUT
          else
            echo "::warning::Invalid tag format (expected vX.Y.Z+*). Skipping tag creation."
            echo "tag_name=" >> $GITHUB_OUTPUT # 유효하지 않으면 tag_name을 비워둠
            echo "is_valid_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Tag
        # 유효한 시맨틱 버전 형식이 추출된 경우에만 태그 생성
        if: steps.extract_tag.outputs.is_valid_tag == 'true'
        uses: rickstaa/action-create-tag@v1
        with:
          tag_exists_error: false # 태그가 이미 존재해도 오류를 발생시키지 않음
          tag: ${{ steps.extract_tag.outputs.tag_name }}
          force_push_tag: true # 태그가 이미 존재하면 강제 푸시
          commit_sha: ${{ github.event.head_commit.id }}
          message: '${{ github.event.head_commit.message }}'

      - name: Create Release (Optional)
        # 선택적으로 이 staging 태그에 대한 드래프트 릴리즈 생성
        if: steps.extract_tag.outputs.is_valid_tag == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.extract_tag.outputs.tag_name }}
          name: ${{ steps.extract_tag.outputs.tag_name }}
          allowUpdates: false
          makeLatest: false # staging 태그는 "최신" 공식 릴리즈가 아닐 수 있음
          draft: true # 드래프트 릴리즈로 생성
          body: '${{ github.event.head_commit.message }}'
          token: ${{ secrets.GC_DCI_TOKEN }}
