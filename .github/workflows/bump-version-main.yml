name: bump-version
run-name: "${{github.triggering_actor}} - Bump version main(${{github.sha}})"

on:
  push:
    branches:
      - main

env:
  USER_EMAIL: dci@deepx.ai
  USER_NAME: dx-ci

permissions: write-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  bump-main-version:
    runs-on: self-hosted
    if: github.repository == 'deepx/dx-all-suite' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'ci-skip') && !contains(github.event.head_commit.message, 'bump-skip') && !contains(github.event.head_commit.message, 'Bump version')
    timeout-minutes: 20
    steps:
      - name: Clean
        run: |
            sudo rm -rf ${{ github.workspace }}
            mkdir -p ${{ github.workspace }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_DCI_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install tools
        run: |
          pip install bump2version
      - name: Set git config
        run: |
          git config --global user.email $USER_EMAIL
          git config --global user.name $USER_NAME
      - name: Get version
        run: |
          VERSION=$(grep 'current_version =' .bumpversion.cfg | cut -d ' ' -f 3)
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Get Next Version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          majorList: break
          minorList: feat
          patchList: fix, perf, refactor
          noVersionBumpBehavior: silent

      - name: Handle No Version Bump Needed
        if: steps.semver.outputs.bump == ''
        run: |
          if git rev-parse v$CURRENT_VERSION >/dev/null 2>&1
          then
            git tag -d v$CURRENT_VERSION
            git push origin :refs/tags/v$CURRENT_VERSION
          fi
          git tag v$CURRENT_VERSION
          git push origin v$CURRENT_VERSION
      - name: Bump version
        if: steps.semver.outputs.bump != ''
        id: version_info
        run: |
          NEW_VERSION=$(bump2version ${{ steps.semver.outputs.bump }} --no-commit --no-tag --list | grep new_version | sed -r 's/new_version=(.*)/\1/')
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "NEW_VERSION_TAG=v$NEW_VERSION" >> $GITHUB_ENV
          git tag v$NEW_VERSION
      - name: Generate RELEASE_NOTES.md
        if: steps.semver.outputs.bump != ''
        uses: orhun/git-cliff-action@v3.0.2
        id: git-cliff
        with:
          config: '.cliff.toml'
          args: --verbose
        env:
          OUTPUT: RELEASE_NOTES.md

      - name: Print the changelog
        if: steps.semver.outputs.bump != ''
        run: cat "${{ steps.git-cliff.outputs.changelog }}"

      - name: Commit changes
        if: steps.semver.outputs.bump != ''
        run: |
          git add .
          git commit -m "Bump version: $CURRENT_VERSION to $NEW_VERSION"
          git push
          git tag -d v$NEW_VERSION
          git tag v$NEW_VERSION
          git push origin $NEW_VERSION_TAG
